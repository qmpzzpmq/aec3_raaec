name: "Test"

base:
    exp: 'exp'
    tensorboard: 'tensorboard'
    wandb: 'wandb'
    neptune: 'neptune'
    seed: 777

trainer:
    accelerator: 'ddp'
    accumulate_grad_batches: 1
    amp_backend: 'native' # 'native' 'apex'
    amp_level: 'O1'
    auto_lr_find: false
    auto_scale_batch_size: false
    auto_select_gpus: false
    benchmark: false
    fast_dev_run: false
    flush_logs_every_n_steps: 100
    gpus: ???
    gradient_clip_val: 50
    gradient_clip_algorithm: 'norm'
    max_epochs: 100
    min_epochs: 5
    limit_train_batches: 1.0
    limit_val_batches: 1.0
    limit_test_batches: 1.0
    limit_predict_batches: 1.0
    log_every_n_steps: 5
    prepare_data_per_node: false 
    precision: 32
    replace_sampler_ddp: true
    resume_from_checkpoint: ???

module:
    module_select: "mobilenet"
    module_conf:
        frontend_conf:
            n_fft: 512
            hop_length: 400
        af_conf:
            fs: 16000

optim:
    optim_select: "adam" # 'adam' 'sgd'
    optim_conf:
        lr: 0.001
    scheduler_select: "lambdalr"
    scheduler_conf:
       last_epoch: -1 

data:
    data_loader:
        batch_size: 16
        shuffle: True
        num_workers: 0
    dataset:
        trainset: 
        - "aecc"
        # - "timitfilter"

        aecc:
            path: "/data1/tanghaoyu/AEC-Challenge/datasets/real" 
            dump_path: "aecc.list"
        timitfilter:
            timit:
                dirpath: "/data1/tanghaoyu/data/TIMIT/TIMIT"
                subset: "train"
            filter:
                datain: "/data1/tanghaoyu/data/rirs_noises/RIRS_NOISES/real_rirs_isotropic_noises"

callbacks:
    progressbar: true
    progressbar_conf:
        refresh_rate: 1
        process_position: 0
    modelcheckpoint: true
    modelcheckpoint_conf:
        filename: 'epoch{epoch}-val_loss{val_loss:.2f}' 
        monitor: 'val_loss'
        save_last: true
        save_top_k: 5
        dirpath: '${base.exp}/${name}'
    earlystopping: true
    earlystopping_conf:
        monitor: 'val_loss'
        mode: 'max'
        min_delta: 0.001
        patience: 5
    gpu_stats: true
    gpu_stats_conf:
        memory_utilization: true
        gpu_utilization: true
    lr_monitor: true
    lr_monitor_conf:
        logging_interval: 'epoch'

loggers:
    tensorboard: true
    tensorboard_conf:
        'save_dir': '${base.tensorboard}/${name}'
    wandb: true
    wandb_conf:
        name: ${name}
        save_dir: '${base.wandb}'
        log_model: true
    neptune: true
    neptune_conf:
        project_name: '${base.neptune}'
        experiment_name: '${name}'
         
